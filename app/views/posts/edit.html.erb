<% content_for(:title, "#{@post.shop.name} #{t('defaults.actions.edit')}") %>
<div class="container my-4">
  <h2 class="mb-4"><%= t('posts.edit.title') %></h2>

  <% if notice.present? %>
    <div class="alert alert-success" role="alert" id="flash_notice">
      <%= notice %>
    </div>
  <% end %>

  <%= form_with(model: @post, local: false, id: "edit_post_form") do |f| %>
    <div class="mb-3">
      <label class="form-label"><%= t('helpers.label.post.visit_date') %></label>
      <div class="row">
        <div class="col-auto">
          <%= f.date_field :visit_date, class: 'form-control', style: 'width: 160px;' %>
        </div>
      </div>
    </div>

    <div class="mb-3" style="margin-top: 1.5rem;">
      <label class="form-label"><%= t('helpers.label.post.shop_name') %></label>
      <div class="row">
        <div class="col-auto">
          <div data-controller="autocomplete" 
              data-autocomplete-url-value="<%= autocomplete_posts_path %>" 
              role="combobox">
            <%= text_field_tag 'post[shop_name]', @post.shop&.name, 
                  data: { autocomplete_target: 'input' }, 
                  class: 'form-control' %>
            <%= hidden_field_tag 'post[shop_id]', @post.shop&.id, data: { autocomplete_target: 'hidden' } %>
            <ul class="list-group" data-autocomplete-target="results"></ul>
          </div>
        </div>
      </div>
    </div>

    <div class="mb-3">
      <label class="form-label"><%= t('helpers.label.post.category') %></label>
      <div class="row">
        <div class="col-auto">
          <%= f.collection_select :category_id, @categories, :id, :name,
                { prompt: t('posts.edit.select.category') },
                class: 'form-select' %>
        </div>
      </div>
    </div>

    <div class="mb-3">
      <label class="form-label"><%= t('helpers.label.post.location') %></label>
      <div class="row">
        <div class="col-auto">
          <%= select_tag 'post[prefecture_id]',
                options_from_collection_for_select(@prefectures, :id, :name, @post.shop&.location&.prefecture_id),
                prompt: t('posts.edit.select.prefectures'),
                class: 'form-select',
                id: 'prefecture-select',
                style: 'min-width: 150px;' %>
        </div>
        <div class="col-auto">
          <%= select_tag 'post[city_id]',
                options_from_collection_for_select(@cities || [], :id, :name, @post.shop&.location&.city_id),
                prompt: t('posts.edit.select.city'),
                class: 'form-select',
                id: 'city-select',
                style: 'min-width: 150px;',
                data: { placeholder: t('posts.edit.select.city') } %>
        </div>
      </div>
    </div>

    <div class="mb-3">
      <label class="form-label"><%= t('helpers.label.post.companion') %></label>
      <div class="row">
        <div class="col-auto">
          <%= f.collection_select :companion_id, @companions, :id, :name,
                { prompt: t('posts.edit.select.companion') },
                class: 'form-select' %>
        </div>
      </div>
    </div>

    <div class="mb-3">
      <label class="form-label"><%= t('helpers.label.post.feeling') %></label>
      <div class="row">
        <div class="col-auto">
          <%= f.collection_select :feeling_id, @feelings, :id, :name,
                { prompt: t('posts.edit.select.feeling') },
                class: 'form-select' %>
        </div>
      </div>
    </div>

    <div class="mb-3">
      <label class="form-label"><%= t('helpers.label.post.visit_reason') %></label>
      <div class="row">
        <div class="col-auto">
          <%= f.collection_select :visit_reason_id, @visit_reasons, :id, :name,
                { prompt: t('posts.edit.select.visit_reason') },
                class: 'form-select' %>
        </div>
      </div>
    </div>

    <div class="mb-3">
      <label class="form-label"><%= t('posts.edit.item.memo') %></label>
      <div class="row">
        <div class="col-auto">
          <%= f.text_area :body, class: 'form-control', rows: 4, style: 'width: 400px;' %>
        </div>
      </div>
    </div>

    <div class="mb-3">
      <%= f.label :post_image, class: "btn btn-outline-secondary", for: "post_image" do %>
        <%= t('posts.edit.item.add_photo') %>
      <% end %>
      <%= f.file_field :post_image, id: "post_image", class: "d-none", accept: 'image/*' %>
      <%= f.hidden_field :post_image_cache %>

      <% if @post.post_image.present? %>
        <%= f.hidden_field :remove_post_image, id: "remove_post_image_field" %>
        <button type="button" class="btn btn-danger ms-2" id="remove_image_button"><%= t('posts.edit.item.delete_photo') %></button>
      <% end %>
    </div>

    <div class="mb-3 text-end">
      <%= f.submit t('posts.edit.submit'), class: 'btn btn-danger text-white' %>
    </div>
  <% end %>
</div>

<script>
  document.addEventListener('turbo:load', () => {
    const removeButton = document.getElementById('remove_image_button');
    const removeField = document.getElementById('remove_post_image_field');
    const form = document.getElementById('edit_post_form');
    if (!form) return;

    if (removeButton) {
      if (!removeButton.dataset.listenerAdded) {
        removeButton.dataset.listenerAdded = "true";
        removeButton.addEventListener('click', () => {
          if (form.dataset.isSubmitting === "true") return;

          if (confirm('<%= j t("posts.edit.flash_message.delete_photo_confirm") %>')) {
            removeField.value = '1';
            form.dataset.isSubmitting = "true";
            form.requestSubmit();
          }
        });
      }
    }
  });

  function handlePrefectureChange() {
    const prefectureSelect = document.getElementById('prefecture-select');
    const citySelect = document.getElementById('city-select');
    if (!prefectureSelect || !citySelect) return;

    const defaultCityOptionText = citySelect.dataset.placeholder || '<%= j t("posts.edit.select.city") %>';
    const prefectureId = prefectureSelect.value;

    citySelect.innerHTML = `<option value="">${defaultCityOptionText}</option>`;

    if (!prefectureId) return;

    fetch(`/posts/cities.json?prefecture_id=${encodeURIComponent(prefectureId)}`)
      .then(response => response.json())
      .then(json => {
        const cities = json.data;
        cities.forEach(city => {
          const option = document.createElement('option');
          option.value = city.id;
          option.textContent = city.name;
          citySelect.appendChild(option);
        });

        <% if @post.shop&.location&.city_id.present? %>
          citySelect.value = '<%= @post.shop.location.city_id %>';
        <% end %>
      })
      .catch(error => console.error('<%= j t("posts.edit.error.fetch_cities") %>', error));
  }

  document.addEventListener('turbo:load', () => {
    handlePrefectureChange();

    const prefectureSelect = document.getElementById('prefecture-select');
    if (prefectureSelect) {
      prefectureSelect.addEventListener('change', handlePrefectureChange);
    }
  });
</script>
